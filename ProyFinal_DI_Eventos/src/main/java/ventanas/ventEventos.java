/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package ventanas;

import DAO.EventoDAO;
import controlador.controlarJavaHelp;
import controlador.metodos;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.swing.Action;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import modelo.Evento;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import javax.swing.AbstractAction;
import javax.swing.JComponent;
import javax.swing.KeyStroke;

/**
 *
 * @author yosoy
 */
public class ventEventos extends javax.swing.JFrame {

    EventoDAO edao = new EventoDAO();
    metodos metodos = new metodos();
    private int paginaActual = 1;
    private int tamanoPagina = 5; // 10 eventos por página
    private int totalPaginas;
    private static final SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
    private List<Evento> eventosCargados;

    /**
     * Creates new form ventUsuario
     */
    public ventEventos() {
        initComponents();
        controlarJavaHelp.inicializarAyuda();
        setTitle("Gestión de Eventos");
        bAnterior.setEnabled(false);
        bSiguiente.setEnabled(false);
        eventosCargados = new ArrayList<>(); // Inicialización inicial
        filtrarEventos(); // carga inicial con paginación
        setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        pack();
        setResizable(false);
        setLocationRelativeTo(null);

        //key para filtro en teclado
        tNombre.addKeyListener(new KeyAdapter() {
            public void keyPressed(KeyEvent e) {
                if (e.getKeyCode() == KeyEvent.VK_ENTER) {
                    bBuscar.doClick();
                }
            }
        });

        cbTipoEvento.addKeyListener(new KeyAdapter() {
            public void keyPressed(KeyEvent e) {
                if (e.getKeyCode() == KeyEvent.VK_ENTER) {
                    bBuscar.doClick();
                }
            }
        });

        jFecha.getDateEditor().getUiComponent().addKeyListener(new KeyAdapter() {
            public void keyPressed(KeyEvent e) {
                if (e.getKeyCode() == KeyEvent.VK_ENTER) {
                    bBuscar.doClick();
                }
            }
        });

          getRootPane().getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW).put(KeyStroke.getKeyStroke("F1"), "javahelp");
        getRootPane().getActionMap().put("javahelp", new AbstractAction() {
            @Override
            public void actionPerformed(ActionEvent e) {
                controlarJavaHelp.mostrarAyuda();
            }
        });
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pGeneral = new javax.swing.JPanel();
        pFiltros = new javax.swing.JPanel();
        lNombre = new javax.swing.JLabel();
        tNombre = new javax.swing.JTextField();
        jFecha = new com.toedter.calendar.JDateChooser();
        bBuscar = new javax.swing.JButton();
        lTipoEvento = new javax.swing.JLabel();
        cbTipoEvento = new javax.swing.JComboBox<>();
        lFecha = new javax.swing.JLabel();
        pTabla = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tEventos = new javax.swing.JTable();
        pBotones = new javax.swing.JPanel();
        bCrear = new javax.swing.JButton();
        bEliminar = new javax.swing.JButton();
        bLimpiar = new javax.swing.JButton();
        bActualizar = new javax.swing.JButton();
        pBotonesPaginas = new javax.swing.JPanel();
        bAnterior = new javax.swing.JButton();
        bSiguiente = new javax.swing.JButton();
        mbAyuda = new javax.swing.JMenuBar();
        mAyuda = new javax.swing.JMenu();
        jmAyuda = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lNombre.setText("Nombre:");

        bBuscar.setText("Filtrar");
        bBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bBuscarActionPerformed(evt);
            }
        });

        lTipoEvento.setText("Tipo Evento:");

        cbTipoEvento.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Todos", "Deportivo", "Cultural", "Cumpleaños", "Boda", "Musical", "Bautizo", "Comunion" }));

        lFecha.setText("Fecha:");

        javax.swing.GroupLayout pFiltrosLayout = new javax.swing.GroupLayout(pFiltros);
        pFiltros.setLayout(pFiltrosLayout);
        pFiltrosLayout.setHorizontalGroup(
            pFiltrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pFiltrosLayout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(pFiltrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(pFiltrosLayout.createSequentialGroup()
                        .addComponent(lNombre)
                        .addGap(27, 27, 27)
                        .addComponent(tNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(54, 54, 54)
                        .addComponent(lFecha)
                        .addGap(40, 40, 40)
                        .addComponent(jFecha, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pFiltrosLayout.createSequentialGroup()
                        .addComponent(lTipoEvento, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cbTipoEvento, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 52, Short.MAX_VALUE)
                .addComponent(bBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        pFiltrosLayout.setVerticalGroup(
            pFiltrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pFiltrosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pFiltrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(bBuscar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(pFiltrosLayout.createSequentialGroup()
                        .addGroup(pFiltrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jFecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(pFiltrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(lNombre)
                                .addComponent(tNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lFecha)))
                        .addGap(24, 24, 24)
                        .addGroup(pFiltrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lTipoEvento)
                            .addComponent(cbTipoEvento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(33, Short.MAX_VALUE))
        );

        tEventos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "idEvento", "Nombre", "Descripcion", "Tipo Evento", "Ubicacion", "Fecha"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tEventos);

        javax.swing.GroupLayout pTablaLayout = new javax.swing.GroupLayout(pTabla);
        pTabla.setLayout(pTablaLayout);
        pTablaLayout.setHorizontalGroup(
            pTablaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pTablaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 759, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(32, Short.MAX_VALUE))
        );
        pTablaLayout.setVerticalGroup(
            pTablaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pTablaLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(32, Short.MAX_VALUE))
        );

        bCrear.setText("Crear");
        pBotones.add(bCrear);

        bEliminar.setText("Eliminar");
        bEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bEliminarActionPerformed(evt);
            }
        });
        pBotones.add(bEliminar);

        bLimpiar.setText("Vaciar");
        bLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bLimpiarActionPerformed(evt);
            }
        });
        pBotones.add(bLimpiar);

        bActualizar.setText("Actualizar");
        bActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bActualizarActionPerformed(evt);
            }
        });
        pBotones.add(bActualizar);

        bAnterior.setText("Anterior");
        bAnterior.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bAnteriorActionPerformed(evt);
            }
        });
        pBotonesPaginas.add(bAnterior);

        bSiguiente.setText("Siguiente");
        bSiguiente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bSiguienteActionPerformed(evt);
            }
        });
        pBotonesPaginas.add(bSiguiente);

        javax.swing.GroupLayout pGeneralLayout = new javax.swing.GroupLayout(pGeneral);
        pGeneral.setLayout(pGeneralLayout);
        pGeneralLayout.setHorizontalGroup(
            pGeneralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pGeneralLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pGeneralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pGeneralLayout.createSequentialGroup()
                        .addComponent(pFiltros, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pGeneralLayout.createSequentialGroup()
                        .addGap(0, 17, Short.MAX_VALUE)
                        .addGroup(pGeneralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pGeneralLayout.createSequentialGroup()
                                .addComponent(pTabla, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(23, 23, 23))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pGeneralLayout.createSequentialGroup()
                                .addGroup(pGeneralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(pBotones, javax.swing.GroupLayout.DEFAULT_SIZE, 765, Short.MAX_VALUE)
                                    .addComponent(pBotonesPaginas, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(42, 42, 42))))))
        );
        pGeneralLayout.setVerticalGroup(
            pGeneralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pGeneralLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pFiltros, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pTabla, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(pBotones, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(pBotonesPaginas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(9, Short.MAX_VALUE))
        );

        mAyuda.setText("Ayuda");

        jmAyuda.setText("JavaHelp");
        jmAyuda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmAyudaActionPerformed(evt);
            }
        });
        mAyuda.add(jmAyuda);

        mbAyuda.add(mAyuda);

        setJMenuBar(mbAyuda);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pGeneral, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pGeneral, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bBuscarActionPerformed
        // TODO add your handling code here:

        paginaActual = 1; //reiniciar pagina 1
        filtrarEventos();
    }//GEN-LAST:event_bBuscarActionPerformed

    private void bLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bLimpiarActionPerformed
        // TODO add your handling code here:
        tNombre.setText("");
        jFecha.setDate(null);
        cbTipoEvento.setSelectedIndex(0);
        paginaActual = 1;
        filtrarEventos();

    }//GEN-LAST:event_bLimpiarActionPerformed

    private void bEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bEliminarActionPerformed
        // TODO add your handling code here:

        int filaSeleccionada = tEventos.getSelectedRow();
        if (filaSeleccionada != -1) {
            Object valor = tEventos.getModel().getValueAt(filaSeleccionada, 0); // Columna 0 es idEvento
            try {
                int idEvento = (Integer) valor;
                int confirmacion = JOptionPane.showConfirmDialog(this, "¿Está seguro de que desea eliminar el evento?", "Confirmar eliminación", JOptionPane.YES_NO_OPTION);
                if (confirmacion == JOptionPane.YES_OPTION) {
                    edao.eliminarEvento(idEvento);
                    filtrarEventos();
                }
            } catch (ClassCastException e) {
                JOptionPane.showMessageDialog(this, "El ID del evento no es un número válido.");
            }
        } else {
            JOptionPane.showMessageDialog(this, "Por favor seleccione un evento para eliminar.");
        }

    }//GEN-LAST:event_bEliminarActionPerformed

    private void bAnteriorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bAnteriorActionPerformed
        // TODO add your handling code here:

        if (paginaActual > 1) {
            paginaActual--;
            filtrarEventos();
        }
    }//GEN-LAST:event_bAnteriorActionPerformed

    private void bSiguienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bSiguienteActionPerformed
        // TODO add your handling code here:

        if (paginaActual < totalPaginas) {
            paginaActual++;
            filtrarEventos();
        }
    }//GEN-LAST:event_bSiguienteActionPerformed

    private void bActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bActualizarActionPerformed
        int filaSeleccionada = tEventos.getSelectedRow();
        if (filaSeleccionada == -1) {
            JOptionPane.showMessageDialog(this, "Por favor seleccione un evento para actualizar.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        int idEvento = (int) tEventos.getValueAt(filaSeleccionada, 0); // Columna 0 es idEvento
        String titulo = (String) tEventos.getValueAt(filaSeleccionada, 1); // Columna 1 es Nombre
        String descripcion = (String) tEventos.getValueAt(filaSeleccionada, 2); // Columna 2 es Descripción
        String tipoEvento = (String) tEventos.getValueAt(filaSeleccionada, 3); // Columna 3 es Tipo Evento
        String ubicacion = (String) tEventos.getValueAt(filaSeleccionada, 4); // Columna 4 es Ubicación
        String fechaStr = (String) tEventos.getValueAt(filaSeleccionada, 5); // Columna 5 es Fecha
        Date fecha = null;
        try {
            if (fechaStr != null && !fechaStr.isEmpty()) {
                fecha = new SimpleDateFormat("yyyy-MM-dd").parse(fechaStr);
            }
        } catch (java.text.ParseException e) {
            JOptionPane.showMessageDialog(this, "Error al parsear la fecha del evento seleccionado.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        ventActuEventos vactuev = new ventActuEventos(this, idEvento, titulo, descripcion, ubicacion, fecha, tipoEvento);
        vactuev.setVisible(true);
    }//GEN-LAST:event_bActualizarActionPerformed

    private void jmAyudaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmAyudaActionPerformed
        // TODO add your handling code here:
        jmAyuda.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                controlarJavaHelp.mostrarAyuda();
            }
        });
    }//GEN-LAST:event_jmAyudaActionPerformed

    public void filtrarEventos() {
        try {
            String titulo = tNombre.getText().trim();
            String fechaStr = null;
            Date fecha = jFecha.getDate();
            if (fecha != null) {
                fechaStr = new SimpleDateFormat("yyyy-MM-dd").format(fecha);
            }
            String tipoEvento = (cbTipoEvento.getSelectedItem() != null) ? cbTipoEvento.getSelectedItem().toString() : "Deportivo";

            int totalEventos = edao.contarEventos(titulo, fechaStr, tipoEvento);
            totalPaginas = (int) Math.ceil((double) totalEventos / tamanoPagina);

            bAnterior.setEnabled(paginaActual > 1);
            bSiguiente.setEnabled(paginaActual < totalPaginas);

            List<Evento> eventos = edao.buscarEventosPaginados(titulo, fechaStr, tipoEvento, paginaActual, tamanoPagina);

            // Guardar los eventos cargados para la actualización
            eventosCargados = new ArrayList<>(eventos);

            DefaultTableModel tableModel = (DefaultTableModel) tEventos.getModel();
            tableModel.setRowCount(0);

            for (Evento evento : eventos) {
                String fechaFormateada = (evento.getFecha() != null) ? sdf.format(evento.getFecha()) : "";
                tableModel.addRow(new Object[]{
                    evento.getIdEvento(), // Añadir idEvento como primera columna
                    evento.getTituloEvento(),
                    evento.getDescripcion(),
                    evento.getTipoEvento(),
                    evento.getUbicacion(),
                    fechaFormateada
                });
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Error al cargar eventos: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ventEventos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ventEventos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ventEventos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ventEventos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ventEventos().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bActualizar;
    private javax.swing.JButton bAnterior;
    private javax.swing.JButton bBuscar;
    private javax.swing.JButton bCrear;
    private javax.swing.JButton bEliminar;
    private javax.swing.JButton bLimpiar;
    private javax.swing.JButton bSiguiente;
    private javax.swing.JComboBox<String> cbTipoEvento;
    private com.toedter.calendar.JDateChooser jFecha;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JMenuItem jmAyuda;
    private javax.swing.JLabel lFecha;
    private javax.swing.JLabel lNombre;
    private javax.swing.JLabel lTipoEvento;
    private javax.swing.JMenu mAyuda;
    private javax.swing.JMenuBar mbAyuda;
    private javax.swing.JPanel pBotones;
    private javax.swing.JPanel pBotonesPaginas;
    private javax.swing.JPanel pFiltros;
    private javax.swing.JPanel pGeneral;
    private javax.swing.JPanel pTabla;
    private javax.swing.JTable tEventos;
    private javax.swing.JTextField tNombre;
    // End of variables declaration//GEN-END:variables
}
